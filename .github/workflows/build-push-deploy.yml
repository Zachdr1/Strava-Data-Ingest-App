# name: build and deploy
#
# on:
#   push
#     # branches:
#     #   - main  # Trigger on push to main branch
#
# jobs:
#   push_to_ecr:
#     name: Push Docker image to Amazon ECR
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1 
#
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
#
#       - name: Build, tag, and push image to ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: my-lambda-repo
#           IMAGE_TAG: testing
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#
#   terraform:
#     name: Terraform Plan and Apply
#     runs-on: ubuntu-latest
#
#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3
#
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: 1.10.3
#
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-east-1
#
#       - name: Initialize Terraform
#         run: terraform init
#
#       - name: Terraform Plan
#         run: terraform plan -out=tfplan
#
#       - name: Terraform Apply
#         run: terraform apply -auto-approve
